<?php
/**
 * ProductPickingShippingDetail
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Procurement
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Procurement API
 *
 * ConnectWise Procurement API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Procurement\Model;

use \ArrayAccess;

/**
 * ProductPickingShippingDetail Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Spinen\ConnectWise\Clients\Procurement
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductPickingShippingDetail implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'ProductPickingShippingDetail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'picked_quantity' => 'int',
        'shipped_quantity' => 'int',
        'warehouse' => '\Spinen\ConnectWise\Clients\Procurement\Model\WarehouseReference',
        'warehouse_bin' => '\Spinen\ConnectWise\Clients\Procurement\Model\WarehouseBinReference',
        'shipment_method' => '\Spinen\ConnectWise\Clients\Procurement\Model\ShipmentMethodReference',
        'serial_number' => 'string',
        'serial_number_ids' => 'int[]',
        'tracking_number' => 'string',
        'product_item' => '\Spinen\ConnectWise\Clients\Procurement\Model\ProductItemReference',
        'line_number' => 'int',
        'quantity' => 'int',
        '_info' => '\Spinen\ConnectWise\Clients\Procurement\Model\Metadata'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'picked_quantity' => 'pickedQuantity',
        'shipped_quantity' => 'shippedQuantity',
        'warehouse' => 'warehouse',
        'warehouse_bin' => 'warehouseBin',
        'shipment_method' => 'shipmentMethod',
        'serial_number' => 'serialNumber',
        'serial_number_ids' => 'serialNumberIds',
        'tracking_number' => 'trackingNumber',
        'product_item' => 'productItem',
        'line_number' => 'lineNumber',
        'quantity' => 'quantity',
        '_info' => '_info'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'picked_quantity' => 'setPickedQuantity',
        'shipped_quantity' => 'setShippedQuantity',
        'warehouse' => 'setWarehouse',
        'warehouse_bin' => 'setWarehouseBin',
        'shipment_method' => 'setShipmentMethod',
        'serial_number' => 'setSerialNumber',
        'serial_number_ids' => 'setSerialNumberIds',
        'tracking_number' => 'setTrackingNumber',
        'product_item' => 'setProductItem',
        'line_number' => 'setLineNumber',
        'quantity' => 'setQuantity',
        '_info' => 'setInfo'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'picked_quantity' => 'getPickedQuantity',
        'shipped_quantity' => 'getShippedQuantity',
        'warehouse' => 'getWarehouse',
        'warehouse_bin' => 'getWarehouseBin',
        'shipment_method' => 'getShipmentMethod',
        'serial_number' => 'getSerialNumber',
        'serial_number_ids' => 'getSerialNumberIds',
        'tracking_number' => 'getTrackingNumber',
        'product_item' => 'getProductItem',
        'line_number' => 'getLineNumber',
        'quantity' => 'getQuantity',
        '_info' => 'getInfo'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['picked_quantity'] = isset($data['picked_quantity']) ? $data['picked_quantity'] : null;
        $this->container['shipped_quantity'] = isset($data['shipped_quantity']) ? $data['shipped_quantity'] : null;
        $this->container['warehouse'] = isset($data['warehouse']) ? $data['warehouse'] : null;
        $this->container['warehouse_bin'] = isset($data['warehouse_bin']) ? $data['warehouse_bin'] : null;
        $this->container['shipment_method'] = isset($data['shipment_method']) ? $data['shipment_method'] : null;
        $this->container['serial_number'] = isset($data['serial_number']) ? $data['serial_number'] : null;
        $this->container['serial_number_ids'] = isset($data['serial_number_ids']) ? $data['serial_number_ids'] : null;
        $this->container['tracking_number'] = isset($data['tracking_number']) ? $data['tracking_number'] : null;
        $this->container['product_item'] = isset($data['product_item']) ? $data['product_item'] : null;
        $this->container['line_number'] = isset($data['line_number']) ? $data['line_number'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['_info'] = isset($data['_info']) ? $data['_info'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['picked_quantity'] === null) {
            $invalid_properties[] = "'picked_quantity' can't be null";
        }
        if ($this->container['shipped_quantity'] === null) {
            $invalid_properties[] = "'shipped_quantity' can't be null";
        }
        if ($this->container['warehouse'] === null) {
            $invalid_properties[] = "'warehouse' can't be null";
        }
        if ($this->container['warehouse_bin'] === null) {
            $invalid_properties[] = "'warehouse_bin' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['picked_quantity'] === null) {
            return false;
        }
        if ($this->container['shipped_quantity'] === null) {
            return false;
        }
        if ($this->container['warehouse'] === null) {
            return false;
        }
        if ($this->container['warehouse_bin'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets picked_quantity
     * @return int
     */
    public function getPickedQuantity()
    {
        return $this->container['picked_quantity'];
    }

    /**
     * Sets picked_quantity
     * @param int $picked_quantity
     * @return $this
     */
    public function setPickedQuantity($picked_quantity)
    {
        $this->container['picked_quantity'] = $picked_quantity;

        return $this;
    }

    /**
     * Gets shipped_quantity
     * @return int
     */
    public function getShippedQuantity()
    {
        return $this->container['shipped_quantity'];
    }

    /**
     * Sets shipped_quantity
     * @param int $shipped_quantity
     * @return $this
     */
    public function setShippedQuantity($shipped_quantity)
    {
        $this->container['shipped_quantity'] = $shipped_quantity;

        return $this;
    }

    /**
     * Gets warehouse
     * @return \Spinen\ConnectWise\Clients\Procurement\Model\WarehouseReference
     */
    public function getWarehouse()
    {
        return $this->container['warehouse'];
    }

    /**
     * Sets warehouse
     * @param \Spinen\ConnectWise\Clients\Procurement\Model\WarehouseReference $warehouse
     * @return $this
     */
    public function setWarehouse($warehouse)
    {
        $this->container['warehouse'] = $warehouse;

        return $this;
    }

    /**
     * Gets warehouse_bin
     * @return \Spinen\ConnectWise\Clients\Procurement\Model\WarehouseBinReference
     */
    public function getWarehouseBin()
    {
        return $this->container['warehouse_bin'];
    }

    /**
     * Sets warehouse_bin
     * @param \Spinen\ConnectWise\Clients\Procurement\Model\WarehouseBinReference $warehouse_bin
     * @return $this
     */
    public function setWarehouseBin($warehouse_bin)
    {
        $this->container['warehouse_bin'] = $warehouse_bin;

        return $this;
    }

    /**
     * Gets shipment_method
     * @return \Spinen\ConnectWise\Clients\Procurement\Model\ShipmentMethodReference
     */
    public function getShipmentMethod()
    {
        return $this->container['shipment_method'];
    }

    /**
     * Sets shipment_method
     * @param \Spinen\ConnectWise\Clients\Procurement\Model\ShipmentMethodReference $shipment_method
     * @return $this
     */
    public function setShipmentMethod($shipment_method)
    {
        $this->container['shipment_method'] = $shipment_method;

        return $this;
    }

    /**
     * Gets serial_number
     * @return string
     */
    public function getSerialNumber()
    {
        return $this->container['serial_number'];
    }

    /**
     * Sets serial_number
     * @param string $serial_number
     * @return $this
     */
    public function setSerialNumber($serial_number)
    {
        $this->container['serial_number'] = $serial_number;

        return $this;
    }

    /**
     * Gets serial_number_ids
     * @return int[]
     */
    public function getSerialNumberIds()
    {
        return $this->container['serial_number_ids'];
    }

    /**
     * Sets serial_number_ids
     * @param int[] $serial_number_ids
     * @return $this
     */
    public function setSerialNumberIds($serial_number_ids)
    {
        $this->container['serial_number_ids'] = $serial_number_ids;

        return $this;
    }

    /**
     * Gets tracking_number
     * @return string
     */
    public function getTrackingNumber()
    {
        return $this->container['tracking_number'];
    }

    /**
     * Sets tracking_number
     * @param string $tracking_number
     * @return $this
     */
    public function setTrackingNumber($tracking_number)
    {
        $this->container['tracking_number'] = $tracking_number;

        return $this;
    }

    /**
     * Gets product_item
     * @return \Spinen\ConnectWise\Clients\Procurement\Model\ProductItemReference
     */
    public function getProductItem()
    {
        return $this->container['product_item'];
    }

    /**
     * Sets product_item
     * @param \Spinen\ConnectWise\Clients\Procurement\Model\ProductItemReference $product_item
     * @return $this
     */
    public function setProductItem($product_item)
    {
        $this->container['product_item'] = $product_item;

        return $this;
    }

    /**
     * Gets line_number
     * @return int
     */
    public function getLineNumber()
    {
        return $this->container['line_number'];
    }

    /**
     * Sets line_number
     * @param int $line_number
     * @return $this
     */
    public function setLineNumber($line_number)
    {
        $this->container['line_number'] = $line_number;

        return $this;
    }

    /**
     * Gets quantity
     * @return int
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     * @param int $quantity
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets _info
     * @return \Spinen\ConnectWise\Clients\Procurement\Model\Metadata
     */
    public function getInfo()
    {
        return $this->container['_info'];
    }

    /**
     * Sets _info
     * @param \Spinen\ConnectWise\Clients\Procurement\Model\Metadata $_info Metadata of the entity
     * @return $this
     */
    public function setInfo($_info)
    {
        $this->container['_info'] = $_info;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\Procurement\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\Procurement\ObjectSerializer::sanitizeForSerialization($this));
    }
}


